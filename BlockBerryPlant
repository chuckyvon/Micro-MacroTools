package com.chucky.myMod.blocks;

import java.util.ArrayList;
import java.util.Random;

import com.chucky.myMod.MMTaM;
import com.chucky.myMod.MMTaMItems;

import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;
import net.minecraft.block.Block;
import net.minecraft.block.BlockBush;
import net.minecraft.block.IGrowable;
import net.minecraft.block.material.Material;
import net.minecraft.client.renderer.texture.IIconRegister;
import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.init.Blocks;
import net.minecraft.item.ItemStack;
import net.minecraft.util.IIcon;
import net.minecraft.world.World;

public class BlockBerryPlant extends BlockBush implements IGrowable {
	
	@SideOnly(Side.CLIENT)
	private IIcon[] icons;
	
	public BlockBerryPlant(){
		super(Material.plants);
		setBlockName(MMTaM.MODID + "_" + "berryplant");
		setCreativeTab((CreativeTabs)null);
		setHardness(0.0F);
		setBlockBounds(0F, 0.0F, 0F, 1F, 0.25F, 1F);
		setStepSound(soundTypeGrass);
	}
	
	@Override
	@SideOnly(Side.CLIENT)
	public void registerBlockIcons(IIconRegister par1IconRegister){
		icons = new IIcon[3];
		
		for(int i = 0; i < icons.length; i++){
			icons[i] = par1IconRegister.registerIcon(MMTaM.MODID + ":" + "berryplant" + i);
		}
	}
	
	@Override
	@SideOnly(Side.CLIENT)
	public IIcon getIcon(int par1, int par2){
		if(par2 < 0 || par2 >= 3){
			System.out.println("Something is wrong with the metadats for BlockBerryPlant!");
			return icons[0];
		}
		else{
			return icons[par2];
		}
	}
	
	@Override
	public int getRenderType(){
		return 6;
	}

	@Override
	public boolean func_149851_a(World world, int x, int y, int z, boolean var5) {
		return world.getBlockMetadata(x, y, z) != 2;
	}

	@Override
	public boolean func_149852_a(World p_149852_1_, Random rand, int p_149852_3_, int p_149852_4_, int p_149852_5_) {
		if(rand.nextInt(3) == 0){
			return true;
		}
		else{
			return false;
		}
	}

	@Override
	public void func_149853_b(World world, Random rand, int x, int y, int z) {
		int next = world.getBlockMetadata(x,  y,  z) + rand.nextInt(3);
		
		if (next > 1){
			next = 2;
		}
		
		world.setBlockMetadataWithNotify(x, y, z, next, 2);
		
	}
	@Override
	public void updateTick(World world, int x, int y, int z, Random rand){
		super.updateTick(world,  x,  y,  z,  rand);
		
		if(world.getBlockLightValue(x, y+1, z) >= 9){
			int l = world.getBlockMetadata(x, y, z);
			
			if(l< 2 && world.getBlock(x, y - 1, z) == Blocks.farmland){
				if (rand.nextInt(40) == 0){
					l++;
					world.setBlockMetadataWithNotify(x, y, z, l, 2);
				}
			}
			if(l< 2 && world.getBlock(x, y - 1, z) == Blocks.grass){
				if (rand.nextInt(70) == 0){
					l++;
					world.setBlockMetadataWithNotify(x, y, z, l, 2);
				}
			}
		}
	}
	protected boolean canPlaceBlockOn(Block block){
		if(block == Blocks.grass || block == Blocks.farmland){
			return true;
		}
		else{
			return false;
		}
	}
	@Override
	public ArrayList<ItemStack> getDrops(World world, int x, int y, int z, int metadata, int fortune){
		ArrayList<ItemStack> ret = new ArrayList<ItemStack>();
		if(metadata >= 2){
			for(int i = 0; i < 4 + fortune; i++){
				if (world.rand.nextInt(15) <= 8){
					ret.add(new ItemStack(MMTaMItems.berry, 1, 0));
				}
			}
		}
		for(int i = 0; i < 1 + fortune; i++){
			ret.add(new ItemStack(MMTaMItems.berryseed, 1 + world.rand.nextInt(2), 0));
		}
		return ret;
	}
	
}
